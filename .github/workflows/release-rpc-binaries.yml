name: Release Binaries for gRPC Server

on:
  push:
    tags:
      - 'v*'

jobs:
  build-matrix:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        target: [ "x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu" ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libssl-dev \
            build-essential \
            cmake \
            g++ \
            libstdc++-11-dev

      - name: Install dependencies for cross-compilation
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Make cargo use the correct linker for cross-compilation
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
            mkdir -p .cargo
            echo '[target.aarch64-unknown-linux-gnu]' >> .cargo/config.toml
            echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

      - name: Build release binary
        env:
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpc-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/rpc

  release:
    needs: build-matrix
    runs-on: ubuntu-24.04

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: List artifacts
        run: ls -R

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        run: |
            RAW_URL="${{ steps.create_release.outputs.upload_url }}"
            CLEAN_URL="${RAW_URL%\{*}"
            targets=("x86_64-unknown-linux-gnu" "aarch64-unknown-linux-gnu")
            for target in "${targets[@]}"; do
                FILE="rpc-$target/rpc"
                echo "Uploading $FILE..."
                curl -sSL \
                -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @"$FILE" \
                "${CLEAN_URL}?name=rpc-$target"
            done
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
