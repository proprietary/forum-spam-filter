name: Build Rust Binaries for the gRPC server

on:
  push:
    branches: [ "main" ]

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [ "x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu" ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libssl-dev \
            build-essential \
            cmake \
            g++ \
            libstdc++-11-dev

      - name: Install dependencies for cross-compilation
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Set linker for aarch64 target
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
            mkdir -p .cargo
            echo '[target.aarch64-unknown-linux-gnu]' >> .cargo/config.toml
            echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

      - name: Build release binary
        env:
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/rpc
