name: Build Rust Binaries for the gRPC server

on:
  push:
    branches: [ "main" ]

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [ "x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu" ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libssl-dev \
            build-essential \
            cmake \
            g++ \
            libstdc++-11-dev

      - name: Install dependencies for cross-compilation
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

      - name: Install ONNX Runtime for aarch64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          curl -L https://github.com/microsoft/onnxruntime/releases/download/v1.20.1/onnxruntime-linux-aarch64-1.20.1.tgz \
            | sudo tar -xz --strip-components=1 -C /usr/local

      - name: Install ONNX Runtime for x86_64
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          curl -L https://github.com/microsoft/onnxruntime/releases/download/v1.20.1/onnxruntime-linux-x64-1.20.1.tgz \
            | sudo tar -xz --strip-components=1 -C /usr/local

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build release binary
        run: |
          export ORT_LIB_LOCATION="/usr/local/lib/libonnxruntime.so"
          cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/rpc
